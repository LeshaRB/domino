plugins {
  id "org.springframework.boot" version "2.0.0.RELEASE"
}

apply plugin: "io.spring.dependency-management"

dependencies {
  compile project(":portal-frontend")
  compile project(":web-portal-backend")

  // Other
  // https://github.com/vert-x3/vertx-codegen/issues/134
  compileOnly("io.vertx:vertx-web:$vertxwebVersion")
  compileOnly("javax.ws.rs:javax.ws.rs-api:$wsrsapiVersion")

  // GWT framework
  compileOnly("com.google.gwt:gwt-servlet:$gwtVersion")

  // Domino framework
  compileOnly("com.progressoft.brix.domino.api:domino-api-server:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.api:domino-api-client:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.logging:domino-remote-logging:$dominoVersion")
  compileOnly("com.progressoft.brix.domino.logging:domino-log4j-server-logging:$dominoVersion")
  //  compileOnly("com.progressoft.brix.domino.sample:todolist-items-backend:1.0-SNAPSHOT")

  // Spring framework
  compileOnly("org.springframework.boot:spring-boot-configuration-processor")
  compile("org.springframework.boot:spring-boot-starter-jetty")
  compile("org.springframework.boot:spring-boot-starter-web") {
    exclude module: "spring-boot-starter-tomcat"
  }

  // Lombok
  compileOnly("org.projectlombok:lombok:$lombokVersion")
  annotationProcessor("org.projectlombok:lombok:$lombokVersion")

  testCompile("org.springframework.boot:spring-boot-starter-test")
}

jar {
  println "---"
  println project(":portal-frontend").getTasks()
  //.getByName("compileGwt").buildDir
//  dependsOn(":portal-frontend:compileGwt")
  into("app") {
    //from(project(":portal-frontend").getTasks().getByName("compileGwt").buildDir)
// from compileGwt.buildDir
  }
}